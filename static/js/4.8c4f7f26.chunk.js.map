{"version":3,"sources":["components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","services/MarvelService.js","hooks/http.hook.js","resources/img/Avengers.png","resources/img/Avengers_logo.png","components/appBanner/AppBanner.js","components/comicsList/ComicsList.js","components/pages/ComicsPage.js"],"names":["ErrorMessage","_jsx","src","img","style","display","width","height","objectFit","margin","alt","useMarvelService","_useHttp","_useState","useState","_useState2","_slicedToArray","loading","setLoading","_useState3","_useState4","error","setError","request","useCallback","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","url","method","body","headers","response","data","_args","arguments","wrap","_context","prev","next","length","undefined","fetch","sent","ok","Error","concat","status","json","abrupt","t0","message","stop","_x","apply","clearError","useHttp","_apiBase","_apiKey","getAllComics","offset","res","results","map","_transformComics","getComic","_ref2","_callee2","id","_context2","getAllCharacters","_ref3","_callee3","_args3","_context3","_transformCharacter","getCharacter","_ref4","_callee4","_context4","_x2","char","name","description","slice","thumbnail","path","extension","homepage","urls","wiki","comics","items","_comics$textObjects$","title","pageCount","language","textObjects","price","prices","AppBanner","_jsxs","className","children","avengers","avengersLogo","ComicsList","comicsList","setComicsList","newItemLoading","setNewItemLoading","_useState5","_useState6","setOffset","_useState7","_useState8","comicsEnded","setComicsEnded","_useMarvelService","useEffect","onRequest","initial","then","onComicsListLoaded","newComicsList","ended","_toConsumableArray","arr","item","i","Link","to","renderItems","errorMessage","spinner","Spinner","disabled","onClick","ComicsPage","_Fragment"],"mappings":"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","file":"static/js/4.8c4f7f26.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from './error.gif'\r\n\r\nconst ErrorMessage = () => {\r\n\treturn(\r\n\t\t<img src={img} style={{display: 'block', width: '250px', height: '250px', objectFit: 'contain', margin: '0 auto'}} alt=''/>\r\n\t)\r\n}\r\n\r\nexport default ErrorMessage;","import { useHttp } from \"../hooks/http.hook\";\r\n\r\nconst useMarvelService = () =>  {\r\n\r\n\tconst {loading, request, error, clearError} = useHttp();\r\n\r\n\tconst _apiBase = 'https://gateway.marvel.com:443/v1/public/';\r\n\tconst _apiKey = 'apikey=fdee923e849c6e77237bd12a7ec6d600';\r\n\tconst _baseOffset = 210;\r\n\r\n\tconst getAllComics = async (offset = 0) => {\r\n\t\tconst res = await request(\r\n\t\t\t`${_apiBase}comics?orderBy=issueNumber&limit=8&offset=${offset}&${_apiKey}`\r\n\t\t);\r\n\t\treturn res.data.results.map(_transformComics);\r\n\t};\r\n\r\n\tconst getComic = async (id) => {\r\n\t\tconst res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\r\n\t\treturn _transformComics(res.data.results[0]);\r\n\t};\r\n\r\n\tconst getAllCharacters = async (offset = _baseOffset) => {\r\n\t\tconst res = await request(`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`);\r\n\t\treturn res.data.results.map(_transformCharacter);\r\n\t}\r\n\r\n\tconst getCharacter = async (id) => {\r\n\t\tconst res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\r\n\t\treturn _transformCharacter(res.data.results[0]);\r\n\t}\r\n\r\n\tconst _transformCharacter = (char) => {\r\n\t\treturn {\r\n\t\t\tid: char.id,\r\n\t\t\tname: char.name,\r\n\t\t\tdescription: char.description ? `${char.description.slice(0, 210)}...` : 'There is no available description.',\r\n\t\t\tthumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\r\n\t\t\thomepage: char.urls[0].url,\r\n\t\t\twiki: char.urls[1].url,\r\n\t\t\tcomics: char.comics.items\r\n\t\t}\r\n\t}\r\n\r\n\tconst _transformComics = (comics) => {\r\n\t\treturn {\r\n\t\t\tid: comics.id,\r\n\t\t\ttitle: comics.title,\r\n\t\t\tdescription: comics.description || \"There is no description\",\r\n\t\t\tpageCount: comics.pageCount\r\n\t\t\t\t? `${comics.pageCount} p.`\r\n\t\t\t\t: \"No information about the number of pages\",\r\n\t\t\tthumbnail: comics.thumbnail.path + \".\" + comics.thumbnail.extension,\r\n\t\t\tlanguage: comics.textObjects[0]?.language || \"en-us\",\r\n\t\t\tprice: comics.prices[0].price\r\n\t\t\t\t? `${comics.prices[0].price}$`\r\n\t\t\t\t: \"not available\",\r\n\t\t};\r\n\t};\r\n\r\n\r\n\treturn {loading, error, getAllCharacters, getCharacter, clearError, getAllComics, getComic};\r\n\r\n}\r\n\r\n\r\nexport default useMarvelService;","import { useState, useCallback } from \"react\";\r\n\r\nexport const useHttp = () => {\r\n\tconst [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n\r\n\tconst request = useCallback(async (url, method = 'GET', body = null, headers = {'Content-Type': 'application/json'}) => {\r\n\r\n\t\tsetLoading(true);\r\n\t\ttry {\r\n\t\t\tconst response = await fetch(url, {method, body, headers});\r\n\r\n\t\t\tif(!response.ok) {\r\n\t\t\t\tthrow new Error(`Could not fetch ${url}, status: ${response.status}`)\r\n\t\t\t}\r\n\t\t\tconst data = await response.json();\r\n\t\t\tsetLoading(false);\r\n\t\t\treturn data;\r\n\t\t} catch(e) {\r\n\t\t\tsetLoading(false);\r\n\t\t\tsetError(e.message);\r\n\t\t\tthrow e;\r\n\t\t}\r\n\r\n\t},[])\r\n\r\n\tconst clearError = useCallback(() => setError(null), []);\r\n\r\n\treturn {loading, error, request, clearError};\r\n}","export default __webpack_public_path__ + \"static/media/Avengers.4065c8f9.png\";","export default __webpack_public_path__ + \"static/media/Avengers_logo.9eaf2193.png\";","import './appBanner.scss';\nimport avengers from '../../resources/img/Avengers.png';\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\n\nconst AppBanner = () => {\n    return (\n        <div className=\"app__banner\">\n            <img src={avengers} alt=\"Avengers\"/>\n            <div className=\"app__banner-text\">\n                New comics every week!<br/>\n                Stay tuned!\n            </div>\n            <img src={avengersLogo} alt=\"Avengers logo\"/>\n        </div>\n    )\n}\n\nexport default AppBanner;","import './comicsList.scss';\n\nimport { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport Spinner from '../spinner/Spinner';\nimport useMarvelService from '../../services/MarvelService';\n\nconst ComicsList = () => {\n    const [comicsList, setComicsList] = useState([]);\n    const [newItemLoading, setNewItemLoading] = useState(false);\n    const [offset, setOffset] = useState(100);\n    const [comicsEnded, setComicsEnded] = useState(false);\n\n\n    const {loading, error, getAllComics} =  useMarvelService();\n\n    useEffect(() =>{\n        onRequest(offset, true);\n    }, [])\n   \n    const onRequest = (offset, initial) => {\n        initial ? setNewItemLoading(false) : setNewItemLoading(true);\n        getAllComics(offset)\n            .then(onComicsListLoaded)\n    }\n\n\n    const onComicsListLoaded = (newComicsList) => {\n        let ended = false;\n        if (newComicsList.length < 8) {\n            ended = true;\n        }\n        setComicsList(comicsList => [...comicsList, ...newComicsList]);\n        setNewItemLoading(newItemLoading => false);\n        setOffset(offset => offset + 9);\n        setComicsEnded(comicsEnded => ended);\n    }\n\n    function renderItems(arr) {\n        const items = arr.map((item, i) => {\n            return (\n                <li key={i} className=\"comics__item\">\n                    <Link to={`/comics/${item.id}`}>\n                        <img src={item.thumbnail} alt={item.title} className=\"comics__item-img\"/>\n                        <div className=\"comics__item-name\">{item.title}</div>\n                        <div className=\"comics__item-price\">{item.price}</div>\n                    </Link>\n                </li>\n            )\n        })\n        return (\n                <ul className=\"comics__grid\">\n                    {items}\n                </ul>\n        )\n    }\n\n\n    const items = renderItems(comicsList);\n\n    const errorMessage = error ? <ErrorMessage/> : null;\n    const spinner = loading && !newItemLoading ? <Spinner/> : null;\n\n    return (\n        <div className=\"comics__list\">\n            {errorMessage}\n            {spinner}\n            {items}\n            <button \n                disabled={newItemLoading} \n                style={{'display' : comicsEnded ? 'none' : 'block'}}\n                className=\"button button__main button__long\"\n                onClick={() => onRequest(offset)}>\n                <div className=\"inner\">load more</div>\n            </button>\n        </div>\n    )\n}\n\nexport default ComicsList;","import AppBanner from '../appBanner/AppBanner';\r\nimport ComicsList from \"../comicsList/ComicsList\";\r\n\r\nconst ComicsPage = () => {\r\n\treturn(\r\n\t\t<>\r\n\t\t\t<AppBanner/>\r\n\t\t\t<ComicsList/>\r\n\t\t</>\r\n\t)\r\n}\r\nexport default ComicsPage;"],"sourceRoot":""}